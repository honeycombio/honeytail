version: 2.1

orbs:
  buildevents: honeycombio/buildevents@0.2.6
  aws-cli: circleci/aws-cli@0.1.13

executors:
  linuxgo:
    parameters:
    working_directory: /go/src/github.com/honeycombio/honeytail
    docker:
      - image: circleci/golang:1.14

commands:
  go-build:
    parameters:
      os:
        description: Target operating system
        type: enum
        enum: ["linux", "darwin"]
        default: "linux"
      arch:
        description: Target architecture
        type: enum
        enum: ["amd64", "arm64"]
        default: "amd64"
    steps:
      - run: |
          GOOS=<< parameters.os >> \
          GOARCH=<< parameters.arch >> \
          buildevents cmd $CIRCLE_WORKFLOW_ID $BUILDEVENTS_SPAN_ID go_build -- \
          go build -ldflags "-X main.BuildID=${CIRCLE_TAG}" \
          -o $GOPATH/bin/honeytail-<< parameters.os >>-<< parameters.arch >> \
          .

jobs:
  setup:
    executor: linuxgo
    steps:
      - buildevents/start_trace

  watch:
    executor: linuxgo
    steps:
      - buildevents/watch_build_and_finish

  test:
    executor: linuxgo
    steps:
      - buildevents/with_job_span:
          steps:
            - checkout
            - buildevents/berun:
                bename: go_test
                becommand: go test --timeout 10s -v ./...

  build:
    executor: linuxgo
    steps:
      - buildevents/with_job_span:
          steps:
            - checkout
            - go-build:
                os: linux
                arch: amd64
            - go-build:
                os: linux
                arch: arm64
            - go-build:
                os: darwin
                arch: amd64
            - buildevents/berun:
                bename: apt_get_update
                becommand: sudo apt-get -qq update
            - buildevents/berun:
                bename: apt_get_install
                becommand: sudo apt-get install -y build-essential rpm ruby ruby-dev
            - buildevents/berun:
                bename: gem_install
                becommand: sudo gem install fpm
            - run: $GOPATH/bin/honeytail-linux-amd64 --write_default_config > ./honeytail.conf
            - buildevents/berun:
                bename: build_deb_amd64
                becommand: ./build-pkg.sh -m amd64 -v "${CIRCLE_TAG}" -t deb
            - buildevents/berun:
                bename: build_deb_arm64
                becommand: ./build-pkg.sh -m arm64 -v "${CIRCLE_TAG}" -t deb
            - buildevents/berun:
                bename: build_rpm_amd64
                becommand: ./build-pkg.sh -m amd64 -v "${CIRCLE_TAG}" -t rpm
            - run: echo "finished build_debs" && find . -ls
            - run: echo "finished build_debs" && find $GOPATH/bin -ls
            - run: mkdir -v ~/artifacts; cp -v honeytail*.{deb,rpm} ~/artifacts/
            - run: |
                mkdir /tmp/honeytail
                cp $GOPATH/bin/* /tmp/honeytail/
                cp ./honeytail.conf /tmp/honeytail/
                find /tmp/honeytail -ls
            - buildevents/berun:
                bename: tar_honeytail
                becommand: tar -cvf /tmp/honeytail.tar /tmp/honeytail
            - run: cp /tmp/honeytail.tar ~/artifacts/
            - run: tar -cvf ~/artifacts/honeytail_all.tar ~/artifacts/honeytail*
            - persist_to_workspace:
                root: ~/
                paths:
                  - artifacts/honeytail_all.tar
            - store_artifacts:
                path: ~/artifacts/

  publish:
    docker:
      - image: cibuilds/github:0.12.1
    steps:
      - buildevents/with_job_span:
          steps:
            - attach_workspace:
                at: artifacts
            - run:
                name: "Publish Release on GitHub"
                command: |
                  echo "about to publish to tag ${CIRCLE_TAG}"
                  tar -xvf artifacts/honeytail_all.tar
                  ls -l *
                  ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./artifacts/honeytail*.{deb,rpm} honeytail.tar

workflows:
  build:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/
      - watch:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
